digraph "" {
c2519_NoDelegateCall[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>NoDelegateCall</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    checkNotDelegateCall()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    noDelegateCall()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    original</TD></TR></TABLE> >];

c2479_UniswapV3Pool -> c2696_IUniswapV3Pool;
c2479_UniswapV3Pool[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>UniswapV3Pool</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    snapshotCumulativesInside(int24,int24)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    observe(uint32[])</font></TD></TR><TR><TD align="left"><font color="#FFA500">    increaseObservationCardinalityNext(uint16)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    initialize(uint160)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    mint(address,int24,int24,uint128,bytes)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    collect(address,int24,int24,uint128,uint128)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    burn(int24,int24,uint128)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    swap(address,bool,int256,uint160,bytes)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    flash(address,uint256,uint256,bytes)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    setFeeProtocol(uint8,uint8)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    collectProtocol(address,uint128,uint128)</font></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    checkTicks(int24,int24)</TD></TR><TR><TD align="left">    _blockTimestamp()</TD></TR><TR><TD align="left">    balance0()</TD></TR><TR><TD align="left">    balance1()</TD></TR><TR><TD align="left">    _modifyPosition(UniswapV3Pool.ModifyPositionParams)</TD></TR><TR><TD align="left">    _updatePosition(address,int24,int24,int128,int24)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    lock()</TD></TR><TR><TD align="left">    onlyFactoryOwner()</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    factory</TD></TR><TR><TD align="left">    token0</TD></TR><TR><TD align="left">    token1</TD></TR><TR><TD align="left">    fee</TD></TR><TR><TD align="left">    tickSpacing</TD></TR><TR><TD align="left">    maxLiquidityPerTick</TD></TR><TR><TD align="left">    slot0</TD></TR><TR><TD align="left">    feeGrowthGlobal0X128</TD></TR><TR><TD align="left">    feeGrowthGlobal1X128</TD></TR><TR><TD align="left">    protocolFees</TD></TR><TR><TD align="left">    liquidity</TD></TR><TR><TD align="left">    ticks</TD></TR><TR><TD align="left">    tickBitmap</TD></TR><TR><TD align="left">    positions</TD></TR><TR><TD align="left">    observations</TD></TR></TABLE> >];

}